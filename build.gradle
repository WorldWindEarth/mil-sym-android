// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${project.property('android-plugin.version')}"
    }
}

allprojects  {
    // NOTE: project.group and project.version must be defined before including
    // maven-support.gradle since it uses these values...
    project.group = ( project.hasProperty('pom.groupId')
            ? project.property('pom.groupId') : "" )

    project.version =
            ( project.hasProperty('pom.version') ? project.property('pom.version') : "1.0" )

    //Use this for your project
    apply from: 'https://raw.githubusercontent.com/chrisdoyle/gradle-fury/master/gradle/maven-support.gradle'

    // forces all changing dependencies (i.e. SNAPSHOTs) to automagicially download
    // (thanks, @BillBarnhill!)
    configurations.all {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
        }
    }

    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    /*******************************************************/
    /*******************************************************/
    // quality plugin
    /*******************************************************/
    /*******************************************************/
    if (project.hasProperty('profile') && project.profile.split(',').contains("ci")) {
        apply from: 'https://raw.githubusercontent.com/chrisdoyle/gradle-fury/master/gradle/quality.gradle'
    }
    /*******************************************************/
    /*******************************************************/
    // END quality plugin
    /*******************************************************/
    /*******************************************************/
}


/*******************************************************/
/*******************************************************/
// crypto plugin
/*******************************************************/
/*******************************************************/

//this gives us the generateMasterKey and encryptPassword tasks
//see https://github.com/chrisdoyle/gradle-fury/issues/67
apply from: 'https://raw.githubusercontent.com/chrisdoyle/gradle-fury/master/gradle/encryption.gradle'

/*******************************************************/
/*******************************************************/
// END crypto plugin
/*******************************************************/
/*******************************************************/







/*******************************************************/
/*******************************************************/
// site plugin
/*******************************************************/
/*******************************************************/

//this is the gradle-fury site plugin, very similar to the maven site plugin
apply from: 'https://raw.githubusercontent.com/chrisdoyle/gradle-fury/master/gradle/site.gradle'

//tip, you can override the output directory of the site by uncommenting the following
//note that gradlew siteWar will always go to the build/site.war file
//ext.buildWebsiteDir = rootDir.absolutePath + "/docs/"


//reuse the project readme as the homepage
task copyReadme() << {
    copy{
        from rootDir.absolutePath + "/README.md"
        into rootDir.absolutePath + "/src/site/"
        rename ("README.md", "index.md")
    }
}
site.dependsOn copyReadme


/*******************************************************/
/*******************************************************/
// end site plugin
/*******************************************************/
/*******************************************************/
